git log --oneline
git reset <id log oneline> (pour revenir en arrière, mais compliqué de récupérer si erreur de suppression)

=> au lieu d'utiliser get reset
// il est conseillé d'utiliser git branch

// jusqu'à maintenant

git add
git commit

// ont été réalisés sur la branche principale du projet
 "master" ou "main"

 => sur la branche main => créer une branche parallèle
 en lui donnant un numéroducommit

 travailler et réaliser des add et des commit

 et si on n'est pas content, on peut couper la branche
 si on est content, on peut la fusionner avec la branche principale (pb de conflit éventuel)

0------------------------------------------
Vérifier que l'ensemble des fichiers soient commit sur la branch principal
git add --all
git commit -m "finaliser branch"
git status => nothing to commit

1------------------------------------------
 git branch menu // permet de créer la branch menu (monde parallèle à la branch principale)
 git checkout menu // permet de se déplacer de la branch principale vers la branch menu
git branch // pour  savoir sur quelle branch je me trouve

2----------------------------------------------
 travailler
 git add et git commit sur cette branch

 avant de revenir sur la branch principal
 il faut au préalable que tous les fichiers sur la branch soient
 100% staged
 

3a--------------------------------------------
 si on est content
 git checkout master (ou main) // revenir sur la branch principale
 git merge menu // fusionner les 2 branch
 git branch -d menu // supprimer la branch menu

 $ git merge menu
Updating a20a497..154d5b0
Fast-forward
 jour1/08-branch.txt       | 17 ++++++++++++++++-
 jour1/09-autre-fichier.js |  6 ++++++
 2 files changed, 22 insertions(+), 1 deletion(-)
 create mode 100644 jour1/09-autre-fichier.js

3b--------------------------------------------
 si on n'est pas content
 git checkout master (ou main) // revenir sur la branch principale
 git branch -D menu // supprimer la branch menu


 REMARQUE

 pour renommer la branch actuelle
 git branch -M menu-principal